<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java内存模型]]></title>
    <url>%2F2017%2F12%2F02%2FJava%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[前言 Java虚拟机在执行Java程序的时候会把管理的内存划分为若干个不同的数据区域，这些区域都有各自的用途，以及创建和销毁的时间，有的是线程共享的，有的是线程共享的，有的是线程隔离的；Java虚拟机所管理的内存区域具体包含以下几个运行时数据区域： 程序计数器程序计数器是线程私有的，它可以看做是当前线程所执行的字节码的行号指示器，字节码解释器工作时就是通过改变这个计数器的值来选择下一条需要执行的字节码指令，分支，循环，跳转，异常处理，线程恢复等基础功能都需要依赖这个计数器来完成如果线程正在执行的是一个Java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是一个Native方法，这个计数器值则为空，此内存区域是唯一一个Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域 Java虚拟机栈与程序计数器一样，Java虚拟机栈也是线程私有的，它的生命周期与线程相同，虚拟机栈描述的是Java方法执行的内存模型，其中包括：每个方法在执行的同时都会创建一个栈帧用于存储变量表，操作数栈，动态链接，方法出口等信息。每一个方法从调用执行完成的过程，就对应着一个栈帧在虚拟机栈中入栈到出栈的过程。 经常有人将Java内存区分为堆内存和栈内存，Java内存区域的划分实际上比这复杂。这样划分只是说明与变量定义密切相关的内存区域是这两块。其中所指的“堆”后面会专门描述，而所指的“栈”就是VM栈中各个帧的本地变量表部分。局部变量表存放了编译期可知的各种基本数据类型（boolean,byte,char,short,int,float,long,double）,对象引用（reference类型）和returnAddress类型。其中64位长度的long和double类型的数据会占用2个局部变量空间（slot），其余的数据类型只占用1个。局部变量表所需的内存空间在编译期间完成分配 在Java虚拟机规范中，对这个区域规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出StackOverflowError异常；如果扩展时无法申请到足够的内存，就会抛出OutOfMemoryError异常 本地方法栈本地方法栈与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行Java方法服务，而本地方法栈则为虚拟机使用到的Native方法服务，它所使用的语言，使用方式和数据结构并没有强制规定，因此具体的虚拟机可以自由实现它。甚至有的虚拟机直接就把本地方法栈和虚拟机栈合二为一和VM栈一样，这个区域也会抛出StackOverflowError和OutOfMemoryError异常。 Java堆对于大多数应用来说，Java堆是Java虚拟机所管理的内存中最大的一块，内存区域，在虚拟机启动时创建。此区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存，。这一点在Java虚拟机规范中的描述是：所有的对象实例以及数组都要在堆上分配，但是随着JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配，标量替换优化技术将会导致一些微妙的变化发生，所有的对象都分配在堆上也渐渐变得不是那么绝对了。 Java堆还可以细分为：新生代和老年代；再细致一点的：eden、from survivor、to survivor，从内存分配的角度来看，线程共享的Java堆中可能划分出多个线程私有的分配缓冲区（TLAB）。根据VM Spec的要求，Java堆可以处于物理上不连续的内存空间，它逻辑上是连续的即可，就像我们的磁盘空间一样。实现时可以选择实现成固定大小的，也可以是可扩展的，不过当前所有商业的虚拟机都是按照可扩展来实现的（通过-Xmx和-Xms控制）。如果在堆中无法分配内存，并且堆也无法再扩展时，将会抛出OutOfMemoryError异常。 方法区方法区和Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java虚拟机规范把方法区描述为堆的一个逻辑部分，但是它有一个别名叫做Non-Heap（非堆），除了和Java堆一样不需要连续的内存，也可以选择固定大小或者可扩展外，甚至可以选择不实现垃圾收集。相对来说，垃圾收集行为在这个区域是相对比较少发生的，但并不是某些描述那样永久代不会发生GC（至少对当前主流的商业JVM实现来说是如此），这里的GC主要是对常量池的回收和对类的卸载，虽然回收的“成绩”一般也比较差强人意，尤其是类卸载，条件相当苛刻。 运行时常量池运行时常量池是方法区的一部分。class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池，用于存放编译器生成的各种字面量和符号引用，这部分内容将在加载后进入方法区的运行时常量池中存放。运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，这种特性被开发利用得比较多的是String类的intern（）方法。 运行时常量池是方法区的一部分，自然受到方法区内存的限制，当常量池无法在申请到内存时会抛出OutOfMemoryError异常。 直接内存直接内存并不是虚拟机运行时数据区的一部分，它根本就是本机内存而不是VM直接管理的区域。但是这部分内存也会导致OutOfMemoryError异常出现，因此我们放到这里一起描述。 显然本机直接内存的分配不会受到Java堆大小的限制，但是即然是内存那肯定还是要受到本机物理内存（包括SWAP区或者Windows虚拟内存）的限制的，一般服务器管理员配置JVM参数时，会根据实际内存设置-Xmx等参数信息，但经常忽略掉直接内存，使得各个内存区域总和大于物理内存限制（包括物理的和操作系统级的限制），而导致动态扩展时出现OutOfMemoryError异常。 下图为整理出来的思维导图]]></content>
      <categories>
        <category>-Java虚拟机</category>
      </categories>
      <tags>
        <tag>-Java内存模型</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的历程]]></title>
    <url>%2F2017%2F11%2F27%2F%E6%88%91%E7%9A%84%E5%8E%86%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[前言 我最终走上技术岗是跟我的兴趣和性格完全相关的，记得高中的时候最喜欢的两门课是数学和物理，在同学们的眼里我就学两门课，那就是数学和物理，我所在的高中有一个优良的传统，那就是每天晚上七点看新闻联播，这也是我们接触外界信息最主要的渠道了，有时候看着新闻联播看到一些科技创新，一些发明就很振奋，心里暗示自己以后也应该成为这样的人，所以高考的时候根据自己的成绩第一志愿报了西电，第一专业计算机专业。但是最后竟然滑档到了经管院，哈哈，真是阴差阳错，不过进入大学也没后悔，在经管院学习到的一些经济学知识，后面工作都能用到，也能去解释一些经济现象，所以我也建议大家有时间也去学习一些经济与管理的知识。但是我大部分时间还是用在了自己喜欢的东西，利用课余时间自己去学习计算机的相关知识，但是兴趣和天赋往往不能同时拥有，我在学习的过程中并没有发现自己有多高的天赋，但是量变会达到质变，好多东西一遍不懂，看两遍，多问，多总结，掌握技巧，这样即使没有天赋我们也能够掌握这些知识。在我接触到的一些人里面，虽然他们从二本院校毕业，但是他们的能力比好多一本院校的学生能力还要强，他们能拿到一线互联网公司的offer，并且在网上与别人做技术分享。按道理我们学历比他们高，能力也应该比他们高才对，但是往往相反，所以我们不能荒废在大学的时间！ 我在学习技术的过程中，其实是走了好多弯路的，大概分这几个阶段： 大一的时候军训结束，社团开始招新，当时看到校科协有个计算机部，心里想着计算机应该能学到一些技术，所以就报了名，最后进去了，当时就报了这一个组织，其它也没报，进去之后有时候会有一些技术培训，但是自己对计算机没有一点基础，也不知道该掌握哪些知识才可以，培训的内容根本不懂，哈哈，感觉一点都没天赋啊。当时还自己去学习C#，好像学到一半就放弃了。当时对一些计算机软件玩得还挺熟，什么视频制作，PS之类的当时差不多都会，大一基本就这样过了，只是积累了一点点计算机的基础！ 大二第一学期，大家都开始报国创了，然后我们班一个同学找到我，让我一起跟着做国创，大概是看到我平时在学习技术，可以做团队的技术开发。当时我们做的是一个物物交换的平台。我当时也没这方面经验，但是国创周期长，可以边学边做，还有导师做指导，学校还提供资源，所以我强烈建议大家有机会就去参加国创，这个过程可以学到很多东西。我在这个这个过程中自学了前端的技术，后端语言当时学习PHP，但是我现在不用PHP写代码。这个过程主要学习到软件工程的一些思想，还有语言的一些感悟，也很庆幸当时学习了前端，现在基本能够独立完成项目的前后端开发，前端不是很复杂的效果都能做，其中js是瓶颈，虽然系统地学习过，但是毕竟不是做前端的，用的少，所以对它的实际应用掌握很差，但是现在前端框架挺多，而且学习成本低，学习一些框架的使用就能做出很多炫酷的页面。做国创的过程算是我真正学习编程的开始吧，所以起步比较晚，虽然最后结果一般般，但是过程还是很重要的。 大二下学期计算机设计大赛，这时候我们院的一个朋友让我跟他们一起做，这个同学编程天赋极高，ACM拿过很多奖，之前我也请他给大家做过ACM分享。我们做的东西是一个APP，其实后台功能但是实现得很少，只是做了前台的界面，但是产品还算比较创新，校赛拿了奖，最后在西北赛区也获了奖。这个时候我才真正开始学习Java，也就是我学习Java是从这个时候开始的。 大三的时候我开始补计算机的其他基础，计算机网络，操作系统，数据库等，但是从后面找工作的经历来看，我的这些基础还差很多，根本没有打牢。这个时候我也意识到算法的重要性，当时看了一本数据结构与算法C语言版，基本看完了，但是看完并不代表完全掌握，更多地还是要用代码实现。所以我在学习的过程存在的最大的问题就是看得多，代码事件很少，我希望大家不要犯同样的毛病，再简单的东西都要用代码去实现。这个过程有一段时间都是高峰，丁志伟我们三个人一起学习，每天早上其中一个人都会在图书馆占好座，然后一起探讨学习，这样互相进步的感觉真是好，两位大佬都很厉害，一个去了腾讯，一个今年签约头条。大三下学期基本就是在找实习了，最后拿到了金蝶的实习offer，实习的工作一般都是比较简单，公司一般也不会让你做一些核心的东西，但是我们可以从这个过程中学习到很多东西，自己去了解公司在用什么技术，怎么用的，这些在学校都是很难学到的东西，这样我们也知道自己该去学习什么了，技术的学习当然要积极主主动一些。 说实话我的历程很普通，中间走过好多弯路，好多东西到现在看来如果当初有计划，系统有针对性地去学习，应该更好点。如果让我从头再来，我觉得并没有但是想的那么难。当时看的有些书我现在又在看第二遍，看第二遍的时候感悟比第一遍深很多，理解更加透彻了，而且越往后越想去了解更加底层的东西，因为这样可以就可以解释程序运行中的十万个为什么。工作这几个月，工作之余我还是保持学习状态，每天尽量抽时间刷leetCode题目，参与开源项目，补基础，有短期计划也有长期计划！ 我一直很庆幸能生长于现在这样一个时代，每天我们都能看到很多创新的东西，更对现在的科技发展感到振奋，这也激励着我不断努力跟上这个时代的发展。在深圳参加过百度和阿里技术相关的活动，让我对现在科技进步和人类的聪明才智惊叹不已。我觉得现在每个人都应该懂一点编程，因为在智能时代，我们与机器打交道的时间更多，如果不懂编程，可能好多东西我们都看不懂。 以下是对大家的一些建议如果你感觉自己一个人学习很迷茫，无从下手，那就以小组形式来学习，每天小组做个todolist，然后定期做交流，遇到困难一起想办法解决，相信我，这样效率会很高！ 一定要重视基础，现在的技术更新非常快，但唯一不变的是这些基础知识，TCP/IP用了这么多年没有发生大的变化吧，算法知识也变化不大吧，只是针对一些领悟内的算法再不断地更新，所以技术的内在都是一样的，只是外壳包装不一样，所以把基础知识打扎实才能走的更快更远！ 如果你学会了一门语言，那就去多实践他，做一个项目，这个项目最好能够最大程度的包含你所学到的东西，同样的项目不同人做出来效果都是不一样的，这就体现出不同人的编码水平！项目不在多，在于精，有了项目基本就有了找实习，找工作的敲门砖，换句话说更有优势一些！ 算法和数据结构很重要，虽然在平时的开发中用的不多，但是这能够体现一个程序员的编码能力和逻辑思维能力，所以好多大厂都会考算法，这样他们才能做人才的筛选，比如微软技术面大概有四五面，基本一路都是算法面，所以大家要足够重视。 好多同学说学习了语言但是还是不知道怎么写程序，程序怎样才能写得优美，那这个时候就需要去看一些源码，JDK源码最合适不过了，他们的代码设计十分完美，已经进行过好多次优化，这也是一群优秀工程师智慧的结晶，仔细研读他们的代码，你会学到很多。再到后面你接触到一些框架的时候，在会用框架的前提下，有时间读一下源码，这个过程收获是很大的！ 如果有机会一定要去实习，因为你如果能去一个好的公司实习，转正的机会就很大，而且实习要求是比正式校招要求低的，所以这是你进入好公司的一个捷径。就算不能转正，积累经验，提高自己，去其他好公司都没问题。 好多事情并不是想象得那么困难，只是你没有做到该做的。过程做好了，结果当然是自然而然的，同时欢迎有对技术感兴趣的和我进行交流，咱们可以互相学习！除了这些，大家也可以利用大学的时间多读一些书，其好处是长久的，我就不多阐述了。最后祝大家学业有成，在学校照顾好自己，毕业以后很怀念在学校的日子，银山安拉，有时间一定会去学校看大家。同时也希望有更多的人来深圳，现在我们在深圳的圈子在慢慢扩大，人多了就很热闹，深圳也非常欢迎年轻人。]]></content>
      <categories>
        <category>经验之谈</category>
      </categories>
      <tags>
        <tag>-经验之谈</tag>
      </tags>
  </entry>
</search>
